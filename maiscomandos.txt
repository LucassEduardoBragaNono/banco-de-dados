###FUNCAO AGREGADA - AGRUPAMENTO

SUM(PARAM) - NUMERICO - SOMA VALORES
AVG(PARAM) - NUMERICO - MEDIA ARITMETICA
COUNT(PARAM) - ID - CONTADOR DE REGISTRO
MAX(PARAM) - MAIOR ELEMENTO DE UM GRUPO 
MIN(PARAM) - MENOR ELEMENTO DE UM GRUPO

DAY() - dia de um campo DATE
MONTH() - mes de um campo DATE
YEAR() - ano de um campo DATE
BETWEEN - entre
IN()
##EX1 - CALCULAR QUANTOS MÉDICOS A CLÍNICA TEM CADASTRADO

SELECT COUNT(id_medico) "Numero de medicos cadastrados"
FROM medicos
WHERE sexo = "F" AND YEAR(data_nasc) > 1990

##ex2 - contar quantos atendimentos foram realizados na linic
SELECT COUNT(*)"Num de atendimentos"
FROM atendimentos
WHERE data_a BETWEEN "2024-08-01" AND "2024-08-10"
AND id_medico IN (3,4,5)

##ex3 - calcular a media das idades entre todos os medicos

SELECT FORMAT(AVG(YEAR(CURRENT_DATE()) - YEAR(data_nasc)),2) "Média das idades dos médicos"
FROM medicos

##ex4 - calcular a media de exames cadastrados 

SELECT CONCAT("R$",FORMAT(AVG(valor),2,"de_DE")) "Média dos valores de exames"
FROM exames

SELECT SUM(valor), COUNT(valor), SUM(valor)/COUNT(valor)
FROM exames ##verificar

#ex4 - calcular a mensalidade que cada aluno paga pelas disciplinas cursadas classificar a listagem pelo nome do aluno
codigoid nome cursoedscritivo valor_mensalidadeR$000,00

SELECT d.id_disciplina 'Código',
a.nome 'Nome',
c.descritivo 'Curso',
CONCAT("R$",FORMAT(SUM(d.valor),2,"de_DE")) 'Valor_mensalidade'
FROM disciplinas d INNER JOIN cursos c
ON(d.id_curso=c.id_curso)
INNER JOIN matriculas m
ON(m.id_disciplina=d.id_disciplina)
INNER JOIN alunos a
ON(a.id_aluno=m.id_aluno)
GROUP BY a.id_aluno
ORDER BY a.nome #######melhorar a logica/relacionamentos, alunos cursos idcurso- disciplina iddisciplina- matricula idaluno
##ex5 - calcular a receita da clinica dos atendimentos considerando o valor da consulta padrao 250 reais

SELECT CONCAT("R$", FORMAT(COUNT(id_atendimento) * 250, 2)) "Receita da clínica"
FROM atendimentos

#ex6 achar o examas com maior valor
SELECT MAX(valor)
FROM exames

#ex7 achar o exame com menor valor

SELECT MIN(valor)
FROM exames

#ex8 achar o exame com o maior e menor valor
SELECT MAX(valor) "maior", MIN(valor) "menor"
FROM exames

## ex1 - Contar o numero de alunos do sexo masculino faculdade
SELECT	COUNT(id_aluno) "Quantidade TOTAL de alunos: "
FROM alunos
WHERE sexo = "M"

##ex2 - calcular a receita da faculdade. a receita da faculdade é a soma dos valores de todas as disciplinas que estao sendo cursadas
SELECT CONCAT("R$",FORMAT(SUM(valor), 2,"de_de")) "Receita"
FROM disciplinas d INNER JOIN matriculas m
ON(d.id_disciplina=m.id_disciplina)

##ex3 - calcular a receita de cada curso da faculdade
SELECT c.id_curso "Código",
	c.descritivo "Descritivo" ,
	SUM(d.valor) "Valor"
FROM disciplinas d INNER JOIN matriculas m
ON (d.id_disciplina=m.id_disciplina)
INNER JOIN cursos c ON(c.id_curso=d.id_curso) #sempre agrupar por ID
GROUP BY c.id_curso
ORDER BY SUM(d.valor) DESC
LIMIT 1

sempre agrupar por id
HAVING 'Nmero_alunos' >= 6  tem q ser variavel  sem espaço acento 
HAVING COUNT(a.id_curso) >= 6 sem ser variavel	com "      "
tipo where sem ser where, faz depois q a tabela ta pronta

#ex1 - Calcular o numero de alunos do sexo feminino em cada curso. classificar a listagem em ordem alfabetica
codigoid cursodescritivo nmeroalunos00
SELECT COUNT(a.id_curso) 'Nmero_alunos',
c.descritivo 'Curso',
c.id_curso 'Código'
FROM alunos a INNER JOIN cursos c
ON(a.id_curso=c.id_curso)
WHERE sexo = 'F'
GROUP BY c.id_curso 
ORDER BY c.descritivo

#ex2 - calcular o numero de disciplinas ministradas por cada professor classificar a listagem e ordem alfabetica pelo nome do professor
codigoid professornome cursodescritivo nro_disciplina00

SELECT p.id_professor 'Código',
p.nome 'Professor',
c.descritivo 'Curso',
COUNT(d.id_professor) 'Nro_disciplina'
FROM professores p INNER JOIN  cursos c
ON(p.id_curso=c.id_curso)
INNER JOIN disciplinas d 
ON(d.id_professor=p.id_professor)
GROUP BY p.id_professor
ORDER BY p.nome


#ex3 - calcular o numero de alunos matriculos em cada disciplina 
codigoid disciplinadescritivo cursodescritivo nro_alunos00

SELECT d.id_disciplina 'Código',
a.nome 'Nome',
c.descritivo 'Curso',
CONCAT("R$",FORMAT(SUM(d.valor),2,"de_DE")) 'Valor_mensalidade',
COUNT(m.id_aluno) 'N_disciplina'
FROM disciplinas d INNER JOIN cursos c
ON(d.id_curso=c.id_curso)
INNER JOIN matriculas m
ON(m.id_disciplina=d.id_disciplina)
INNER JOIN alunos a
ON(a.id_aluno=m.id_aluno)
GROUP BY a.id_aluno
ORDER BY a.nome


VIEW - 
OR REPLACE não precisa ficar dropando a view tda hora que atualiza-la
a view leva so os dados q vc precisa, se nao leva a tabela inteira

CREATE OR REPLACE VIEW vw_imagem_funcionario AS
SELECT f.id_funcionario 'codigo',
	f.nome 'Nome',
	e.descritivo 'Unidade',
	c.descritivo 'Cargo'
FROM funcionarios f INNER JOIN empresas e
ON (f.id_empresa=e.id_empresa)
INNER JOIN departamentos d
ON (f.id_departamento=d.id_departamento)
INNER JOIN cargos c ON
(f.id_cargo=c.id_cargo)
ORDER BY f.nome

SELECT * FROM vw_imagem_funcionario

##reutilizacao

SELECT vw.nome, vw.codigo, vw.cargo, f.salario
FROM vw_imagem_funcionario vw INNER JOIN
funcionarios f ON (vw.codigo=f.id_funcionario)

alguns exercicios traduzidos para view(da faculdade_wds)

#Exer1 - Calcular o numero de alunos do sexo feminino
#em cada curso. Classificar a listagem em ordem 
#alfabetica.
Código       Curso       Nro_alunos
  id       descritivo       00
  
CREATE OR REPLACE VIEW vw_listagem_curso AS
SELECT c.id_curso "Codigo", c.descritivo "Curso",
COUNT(a.id_curso) "Nro_alunos_cursos"
FROM cursos c INNER JOIN alunos a
ON (c.id_curso=a.id_curso)
WHERE a.sexo = "F"
GROUP BY c.id_curso
HAVING COUNT(a.id_curso) >= 6 
ORDER BY c.descritivo
 
  
  
#Exer2 - Calcular o numero de disciplinas ministradas
#por cada professor. Classificar a listagem em ordem 
#albetica pelo nome do professor.
Código  Professor    Curso        Nro_disciplinas
  id      nome     descritivo           00
 
CREATE OR REPLACE VIEW vw_disc_min_pro AS
SELECT p.id_professor "Codigo", p.nome "Nome",
c.descritivo "Curso", 
COUNT(d.id_professor) "Nro_disciplinas"
FROM professores p INNER JOIN cursos c
ON (p.id_curso=c.id_curso) INNER JOIN
disciplinas d ON (d.id_professor=p.id_professor)
GROUP BY p.id_professor
HAVING nro_disciplinas >= 5
ORDER BY p.nome

SELECT * FROM vw_disc_min_pro

  
  
#Exer3 - Calcular o numero de alunos matriculados 
#em cada disciplina.
#Classificar a listagem pelo id da disciplina.
Código  Disciplina    Curso       Nro_Alunos
  id    descritivo    descritivo       00 

CREATE OR REPLACE VIEW vw_alu_ma_disc AS
SELECT d.id_disciplina "Codigo",
       d.descritivo "Disciplina",
       c.descritivo "Curso",
       COUNT(m.id_disciplina) "Nro_Alunos"
FROM disciplinas d INNER JOIN cursos c 
ON (d.id_curso=c.id_curso) INNER JOIN 
matriculas m ON (m.id_disciplina=d.id_disciplina)
GROUP BY d.id_disciplina
ORDER BY d.id_disciplina

SELECT * FROM vw_alu_ma_disc


#Exer4 - Calcular a mensalidade que cada aluno 
#paga pelas disciplinas cursadas.
#Classificar a listagem pelo nome do 
#aluno.
Código     Nome     Curso     Valor_Mensalidade
  id              descritivo      R$ 0.000,00
 
CREATE OR REPLACE VIEW vw_mes_alu_cur AS
SELECT a.id_aluno "Codigo", a.nome,
       c.descritivo "Curso",
SUM(d.valor) "Valor_Mensalidade", ##se for usar o format e o concat ter em mente que nao dará para utilizar esses numeros para contas ou dxa em ordem tipo crescente, eles se tornaram string
COUNT(m.id_aluno) "Nro_Disciplinas"
FROM alunos a INNER JOIN cursos c
ON (a.id_curso=c.id_curso) INNER JOIN
matriculas m ON (a.id_aluno=m.id_aluno)
INNER JOIN disciplinas d 
ON (d.id_disciplina=m.id_disciplina)
GROUP BY a.id_aluno
ORDER BY a.nome

SELECT * FROM vw_mes_alu_cur